version: "3.7"

##### NETWORK #####
networks:
  proxy_net:
    external:
      name: $NETWORK
  default:
    driver: bridge

services:

##### Proxy & Auth #####
  traefik:
    container_name: traefik
    image: traefik:chevrotin # chevrotin = v2.2.x
    restart: unless-stopped
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      # Use only with Cloudflare: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --log=true
      - --log.level=WARN # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --serversTransport.insecureSkipVerify=true # This is needed for unifi controller. Not a risk if tthe container and traefik are on the same machine
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=HostHeader(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=$NETWORK
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from files in a folder
      - --providers.file.watch=true # Only works on top level files in the rules folder
      - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      # DuckDNS
      # LetsEncrypt Staging Server - uncomment when testing
#      - --certificatesResolvers.duckdns.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
#      - --certificatesResolvers.duckdns.acme.email=$MY_EMAIL
#      - --certificatesResolvers.duckdns.acme.storage=/acme.json
#      - --certificatesResolvers.duckdns.acme.dnsChallenge.provider=duckdns
    networks:
      proxy_net:
        ipv4_address: 192.168.50.254
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8082
        protocol: tcp
        mode: host
    volumes:
      - $DOCKERDIR/traefik/rules:/rules 
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/traefik/acme/acme.json:/acme.json 
      - $DOCKERDIR/traefik/traefik.log:/traefik.log 
      - $DOCKERDIR/shared:/shared
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
      - TZ=$TZ
#      - DUCKDNS_TOKEN=$DUCKDNS_TOKEN
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=HostHeader(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAINNAME"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAINNAME"
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file" 

# Google OAuth - Single Sign On using OAuth 2.0
  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=$GOOGLE_CLIENT_ID
      - CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - SECRET=$OAUTH_SECRET
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=false
      - AUTH_HOST=auth.$DOMAINNAME
      - URL_PATH=/_oauth
      - WHITELIST=$MY_EMAIL,$HER_EMAIL # Add all the gmail emails who will be able to login
      - LOG_LEVEL=warn # [trace|debug|info|warn|error|fatal|panic]
      - LIFETIME=2592000 # 30 days
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.oauth-rtr.entrypoints=https"
      - "traefik.http.routers.oauth-rtr.rule=HostHeader(`auth.$DOMAINNAME`)"
      - "traefik.http.routers.oauth-rtr.tls=true"
      ## HTTP Services
      - "traefik.http.routers.oauth-rtr.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=$OAUTH_PORT"
      ## Middlewares
      - "traefik.http.routers.oauth-rtr.middlewares=chain-oauth@file"

### Cloudflare Companions - Comment if not using Cloudflare ###
# Cloudflare DDNS - Dynamic DNS Updater
  cf-ddns:
    container_name: cf-ddns
    image: oznu/cloudflare-ddns:latest
    restart: unless-stopped
    networks:
      - $NETWORK
    environment:
      - API_KEY=$CLOUDFLARE_API_TOKEN
      - ZONE=$DOMAINNAME
      - PROXIED=true
      - RRTYPE=A
      - DELETE_ON_STOP=false
      - DNS_SERVER=1.1.1.1

# Cloudflare-Companion - Automatic CNAME DNS Creation
  cf-companion:
    container_name: cf-companion
    image: tiredofit/traefik-cloudflare-companion:latest
    restart: unless-stopped
    networks:
      - $NETWORK
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TIMEZONE=$TZ
      - TRAEFIK_VERSION=2
      - CF_EMAIL=$CLOUDFLARE_EMAIL
      - CF_TOKEN=$CLOUDFLARE_API_KEY
      - TARGET_DOMAIN=$DOMAINNAME
      - DOMAIN1=$DOMAINNAME
      - DOMAIN1_ZONE_ID=$CLOUDFLARE_ZONEID # From Cloudflare Overview page
      - DOMAIN1_PROXIED=TRUE
    labels:
      # Since cf-companion creates CNAMEs based on host rules, this a workaround for non-docker/external apps
      - "traefik.http.routers.cf-companion-rtr.rule=Host(`pihole.$DOMAINNAME`)"
      - "traefik.http.routers.cf-companion-rtr.rule=Host(`shinobi.$DOMAINNAME`)"
      - "traefik.http.routers.cf-companion-rtr.rule=Host(`pi-data.$DOMAINNAME`)"
      - "traefik.http.routers.cf-companion-rtr.rule=Host(`pihole2.$DOMAINNAME`)"
      - "traefik.http.routers.cf-companion-rtr.rule=Host(`pi2-data.$DOMAINNAME`)"

### Duckdns DNS updater - Uncomment if using DUCKDNS ###
#  duckdns:
#    image: linuxserver/duckdns
#    container_name: duckdns
#    environment:
#      - PUID=$PUID
#      - PGID=$PGID
#      - TZ=$TZ
#      - SUBDOMAINS=$DUCKDNS_DOMAIN
#      - TOKEN=$DUCKDNS_TOKEN
#      - LOG_FILE=false
#    restart: unless-stopped


##### Containers Management #####

# Ouroboros - Automatic Docker Container Updates
  ouroboros:
    image: pyouroboros/ouroboros:latest
    container_name: ouroboros
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: $TZ
      INTERVAL: 86400
      LOG_LEVEL: debug
      SELF_UPDATE: "true"
      CLEANUP: "true"
      IGNORE: netdata # Add all containers you dont want to update (like home assistant ones if running supervised)

# Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=https"
      - "traefik.http.routers.dozzle-rtr.rule=HostHeader(`logs.$DOMAINNAME`)"
      - "traefik.http.routers.dozzle-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=$DOZZLE_PORT"

# Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock --no-auth
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/portainer/data:/data
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=https"
      - "traefik.http.routers.portainer-rtr.rule=HostHeader(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.portainer-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=$PORTAINER_PORT"

##### Unifi Controller #####

  unifi:
    container_name: unifi
    image: linuxserver/unifi-controller
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/unifi:/config
    ports:
      - target: 3478
        published: 3478
        protocol: udp
        mode: host
      - target: 10001
        published: 10001
        protocol: udp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 8081
        published: 8081
        protocol: tcp
        mode: host
      - target: 8443
        published: 8443
        protocol: tcp
        mode: host
      - target: 8843
        published: 8843
        protocol: tcp
        mode: host
      - target: 8880
        published: 8880
        protocol: tcp
        mode: host
      - target: 6789
        published: 6789
        protocol: tcp
        mode: host
      - target: 5514
        published: 5514
        protocol: tcp
        mode: host
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.unifi-rtr.entrypoints=https"
      - "traefik.http.routers.unifi-rtr.rule=HostHeader(`unifi.$DOMAINNAME`)"
      - "traefik.http.routers.unifi-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.unifi-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.unifi-rtr.service=unifi-svc"
      - "traefik.http.services.unifi-svc.loadbalancer.server.scheme=https"
      - "traefik.http.services.unifi-svc.loadbalancer.server.port=$UNIFI_PORT"

##### Server Dashboard #####

# Netdata - System Stats
  netdata:
    image: netdata/netdata
    container_name: netdata
    restart: unless-stopped
    networks:
      - $NETWORK
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    hostname: $DOMAINNAME
    ports:
      - "$NETDATA_PORT:19999"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt:/mnt:ro
      - /etc/timezone:/etc/timezone:ro
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.netdata-rtr.entrypoints=https"
      - "traefik.http.routers.netdata-rtr.rule=HostHeader(`netdata.$DOMAINNAME`)"
      - "traefik.http.routers.netdata-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.netdata-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.netdata-rtr.service=netdata-svc"
      - "traefik.http.services.netdata-svc.loadbalancer.server.port=$NETDATA_PORT"

#### Databases ####

# MariaDB - MySQL Database
  mariadb:
    container_name: mariadb
    image: linuxserver/mariadb:latest
    restart: always
    networks:
      proxy_net:
        ipv4_address: 192.168.50.250
    security_opt:
      - no-new-privileges:true
    ports:
      - "$MARIADB_PORT:3306"
    volumes:
      - $DOCKERDIR/mariadb/data:/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MYSQL_ROOT_PASSWORD=$SERVER_PASSWORD

# phpMyAdmin - Database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=$MARIADB_PORT
      - PMA_ABSOLUTE_URI=https://pma.$DOMAINNAME
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.pma-rtr.entrypoints=https"
      - "traefik.http.routers.pma-rtr.rule=HostHeader(`pma.$DOMAINNAME`)"
      - "traefik.http.routers.pma-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.pma-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.pma-rtr.service=pma-svc"
      - "traefik.http.services.pma-svc.loadbalancer.server.port=$PMA_PORT"

# InfluxDB - Database for sensor data
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    ports:
      - "$INFLUXDB_PORT:8086"
    volumes:
      - $DOCKERDIR/influxdb/db:/var/lib/influxdb
    environment:
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=$MY_USER
      - INFLUXDB_ADMIN_PASSWORD=$SERVER_PASSWORD

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    restart: unless-stopped
    networks:
      - $NETWORK
    depends_on:
      - influxdb
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/chronograf:/var/lib/chronograf
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.chronograf-rtr.entrypoints=https"
      - "traefik.http.routers.chronograf-rtr.rule=HostHeader(`chrono.$DOMAINNAME`)"
      - "traefik.http.routers.chronograf-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.chronograf-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.chronograf-rtr.service=chronograf-svc"
      - "traefik.http.services.chronograf-svc.loadbalancer.server.port=$CHRONOGRAF_PORT"

# Grafana - Graphical data visualization for InfluxDB data
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    user: "0" # If we don't set this, there's permission errors...
    volumes:
      - $DOCKERDIR/grafana:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: "natel-discrete-panel" # Can add more plugins to install
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.grafana-rtr.entrypoints=https"
      - "traefik.http.routers.grafana-rtr.rule=HostHeader(`grafana.$DOMAINNAME`)"
      - "traefik.http.routers.grafana-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.grafana-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.grafana-rtr.service=grafana-svc"
      - "traefik.http.services.grafana-svc.loadbalancer.server.port=$GRAFANA_PORT"

#### Frontend ####

# Organizr - Unified Frontend
  organizr:
    container_name: organizr
    image: organizrtools/organizr-v2:latest
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/organizr:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.organizr-rtr.entrypoints=https"
      - "traefik.http.routers.organizr-rtr.rule=HostHeader(`$DOMAINNAME`,`www.$DOMAINNAME`)" 
      - "traefik.http.routers.organizr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.organizr-rtr.middlewares=chain-oauth@file" 
      ## HTTP Services
      - "traefik.http.routers.organizr-rtr.service=organizr-svc"
      - "traefik.http.services.organizr-svc.loadbalancer.server.port=$ORGANIZR_PORT"


# Heimdall - Unified Frontend Alternative/Complement
  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall:latest
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/heimdall:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-rtr.entrypoints=https"
      - "traefik.http.routers.heimdall-rtr.rule=HostHeader(`heimdall.$DOMAINNAME`)"
      - "traefik.http.routers.heimdall-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.heimdall-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.heimdall-rtr.service=heimdall-svc"
      - "traefik.http.services.heimdall-svc.loadbalancer.server.port=$HEIMDALL_PORT"

#### Utilities ####

# Guacamole Daemon - Needed for Guacamole
  guacd:
    image: guacamole/guacd
    container_name: guacd
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - $NETWORK

# Guacamole - Remote desktop, SSH, on Telnet in a browser
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    restart: unless-stopped
    networks:
      - $NETWORK
    depends_on:
      - mariadb
      - guacd
    security_opt:
      - no-new-privileges:true
    environment:
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: mariadb
      MYSQL_PORT: $MARIADB_PORT
      MYSQL_DATABASE: guacamole
      MYSQL_USER: guacdb_user
      MYSQL_PASSWORD: guacamole
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-rtr.entrypoints=https"
      - "traefik.http.routers.guacamole-rtr.rule=HostHeader(`guac.$DOMAINNAME`)"
      - "traefik.http.routers.guacamole-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.guacamole-rtr.middlewares=chain-oauth@file,add-guacamole" 
      - "traefik.http.middlewares.add-guacamole.addPrefix.prefix=/guacamole"
      ## HTTP Services
      - "traefik.http.routers.guacamole-rtr.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=$GUACAMOLE_PORT"

# Filerun - File Manager - Need to create user/db before
  filerun:
    image: afian/filerun
    container_name: filerun
    restart: unless-stopped
    networks:
      - proxy_net
    depends_on:
      - mariadb
    environment:
      FR_DB_HOST: mariadb
      FR_DB_PORT: $MARIADB_PORT
      FR_DB_NAME: filerun
      FR_DB_USER: filerun
      FR_DB_PASS: filerun
      APACHE_RUN_USER: $MY_USER
      APACHE_RUN_USER_ID: $PUID
      APACHE_RUN_GROUP: $NAS_GROUP
      APACHE_RUN_GROUP_ID: $NAS_GROUPID
    volumes:
      - $DOCKERDIR/filerun/html:/var/www/html
      - $DATA_DIR:/user-files
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.filerun-rtr.entrypoints=https"
      - "traefik.http.routers.filerun-rtr.rule=HostHeader(`filerun.$DOMAINNAME`)"
      - "traefik.http.routers.filerun-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.filerun-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.filerun-rtr.service=filerun-svc"
      - "traefik.http.services.filerun-svc.loadbalancer.server.port=$FILERUN_PORT"

#### Download media ####

# qBittorrent - Torrent downloader
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/qbittorrent:/config
      - $DOWNLOADS_DIR:/downloads
      - $TORRENTS_DIR:/torrents
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002
      WEBUI_PORT: $QBIT_PORT
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qbittorrent-rtr.entrypoints=https"
      - "traefik.http.routers.qbittorrent-rtr.rule=HostHeader(`qbit.$DOMAINNAME`)"
      - "traefik.http.routers.qbittorrent-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc"
      - "traefik.http.services.qbittorrent-svc.loadbalancer.server.port=$QBIT_PORT"

# Jackett - Torrent indexer proxy
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: always
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/jackett:/config
      - $DOWNLOADS_DIR:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jackett-rtr.entrypoints=https"
      - "traefik.http.routers.jackett-rtr.rule=HostHeader(`jackett.$DOMAINNAME`)"
      - "traefik.http.routers.jackett-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.jackett-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.jackett-rtr.service=jackett-svc"
      - "traefik.http.services.jackett-svc.loadbalancer.server.port=$JACKETT_PORT"

# Radarr - Movie management
  radarr:
    image: linuxserver/radarr:preview
    container_name: radarr
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/radarr:/config
      - $DOWNLOADS_DIR:/downloads
      - $MOVIES_DIR:/movies
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=HostHeader(`radarr.$DOMAINNAME`)"
      - "traefik.http.routers.radarr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.radarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=$RADARR_PORT"

# Sonarr - TV Shows management
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/sonarr:/config
      - $DOWNLOADS_DIR:/downloads
      - $SERIES_DIR:/tv
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=HostHeader(`sonarr.$DOMAINNAME`)"
      - "traefik.http.routers.sonarr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=$SONARR_PORT"

#### Media Server ####

# Plex 
  plexms:
    image: linuxserver/plex:latest
    container_name: plexms
    restart: unless-stopped
    networks:
      - $NETWORK
    security_opt:
      - no-new-privileges:true
    ports:
      - "$PLEX_PORT:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    volumes:
      - $DOCKERDIR/plexms:/config
      - $SERIES_DIR:/tv
      - $MOVIES_DIR:/movies
    environment:
      TZ: $TZ
      PLEX_CLAIM: $PLEX_CLAIM
      ADVERTISE_IP: http://$SERVER_IP:$PLEX_PORT/
      PUID: $PUID
      PGID: $PGID
      VERSION: docker
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.plexms-rtr.entrypoints=https"
      - "traefik.http.routers.plexms-rtr.rule=HostHeader(`plex.$DOMAINNAME`)"
      - "traefik.http.routers.plexms-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.plexms-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.plexms-rtr.service=plexms-svc"
      - "traefik.http.services.plexms-svc.loadbalancer.server.port=$PLEX_PORT"

# Kitana - Subtitle Manager UI - Needs SubZero Plugin inside plex
  kitana:
    image: pannal/kitana:latest
    container_name: kitana
    restart: unless-stopped
    networks:
      - $NETWORK
    depends_on:
      - plexms
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/kitana:/app/data
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.kitana-rtr.entrypoints=https"
      - "traefik.http.routers.kitana-rtr.rule=HostHeader(`kitana.$DOMAINNAME`)"
      - "traefik.http.routers.kitana-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.kitana-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.kitana-rtr.service=kitana-svc"
      - "traefik.http.services.kitana-svc.loadbalancer.server.port=$KITANA_PORT"
    command: -P # To load css behind proxy

# Tautulli - Plex statistics and monitoring
  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    networks:
      - $NETWORK
    depends_on:
      - plexms
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/tautulli/config:/config
      - $DOCKERDIR/tautulli/logs:/logs:ro
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.tautulli-rtr.entrypoints=https"
      - "traefik.http.routers.tautulli-rtr.rule=HostHeader(`tautulli.$DOMAINNAME`)"
      - "traefik.http.routers.tautulli-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.tautulli-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.tautulli-rtr.service=tautulli-svc"
      - "traefik.http.services.tautulli-svc.loadbalancer.server.port=$TAUTULLI_PORT"

#### Smart Home ####

# Mosquitto Server
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "$MOSQUITTO_HTTP_PORT:1883" #http
      - "9001:9001" #websockets
    volumes:
      - $DOCKERDIR/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - $DOCKERDIR/mosquitto/config/pwfile:/mosquitto/config/pwfile
      - $DOCKERDIR/shared:/shared
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ